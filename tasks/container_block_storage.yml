---
#- name: never modify an already mounted device or existing filesystem 
#  assert:
#    that: ansible_mounts | selectattr('device', 'equalto', container_block_device) | list | length > 0
#    msg: "already mounted"
#  loop: "{{ ansible_mounts }}"
#  loop_control:
#    loop_var: disk
- name: 'xfs for containers'
  filesystem:
    fstype: xfs
    dev: "/dev/{{ container_block_device }}"
    opts:  -n ftype=1
  when: ansible_mounts | selectattr('device', 'equalto', "/dev/" + disk.key) | list | length < 1 and disk.key == container_block_device
  loop: "{{ ansible_devices | dict2items }}"
  loop_control:
    loop_var: disk
  tags:
    - storage
- name: mount storage
  mount:
    path: /var/lib/containers
    state: mounted
    fstype: xfs
    opts: noatime
    src: "/dev/{{ container_block_device }}"
  when: ansible_mounts | selectattr('device', 'equalto', "/dev/" + disk.key) | list | length < 1 and disk.key == container_block_device
  loop: "{{ ansible_devices | dict2items }}"
  loop_control:
    loop_var: disk
  tags:
    - storage
#- name: pull the images
#  shell: "{{ container_engine }} pull {{ c.registry_host }}/{{ c.project }}/{{ c.container_image_name }}:{{ c.container_image_version_tag }}  "
#  tags:
#    - intensive
#  when: container_chalk is defined 
#  loop: "{{ container_chalk }}"
#  loop_control:
#    loop_var: c
#  tags:
#    - image_build
#    - async_TODO
# https://github.com/NotGlop/docker-drag/blob/master/docker_pull.py

- name: cache containers at image build, then move them at runtime
  template:
    src: container-cache.service
    dest: /etc/systemd/system/
    owner: 'root'
    group: 'deploy'
    mode: 0660
