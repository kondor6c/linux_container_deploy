---
- name: install podman
  package:
    state: installed
    update_cache: no
    name: "{{ item }}"
  loop:
    - podman
    - crun
    - runc

- name: Check to see if we are booting with EFI or UEFI (from ansible_hardening role)
  set_fact:
    booted_with_efi: "{{ ansible_mounts | selectattr('mount', 'equalto', '/boot/efi') | list | length > 0 }}"

- name: create dir first
  file:
    owner: root
    group: root
    path: /etc/containers
    mode: 0775
    state: directory

- name: podman storage config
  template:
    dest: /etc/containers/storage.conf
    src: container-storage.conf
    mode: 0644
    setype: etc_t
    owner: root
    group: root

- name: podman config
  template:
    dest: /etc/containers/
    src: containers.conf
    mode: 0644
    setype: etc_t
    owner: root
    group: root
      #- name: 'check if fapolicy installed'
      #  stat:
      #    path: /etc/fapolicy
      #  register: efi

- name: 'check if EFI'
  stat:
    path: /sys/firmware/efi
  register: efi

- name: 'allow runc on new kernels'
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="(.*)"$'
    backrefs: yes
    backup: true
    line: 'GRUB_CMDLINE_LINUX="\g<1> systemd.unified_cgroup_hierarchy=0 "'
  register: altered_grub

- name: 'grub for EFI'
  command: "grub2-mkconfig -o /boot/efi/EFI/{{ ansible_distribution | lower }}/grub.cfg"
  when: efi.stat.exists and altered_grub.changed

- name: 'grub for BIOS'
  command: grub2-mkconfig -o /boot/grub2/grub.cfg
  when: ! efi.stat.exists and (altered_grub.changed == True)

